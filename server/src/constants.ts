/**
 * NMTRAN Control Records Dictionary
 * 
 * Complete list of valid NMTRAN control records for validation.
 * Add new control records here when NONMEM adds them.
 * Keep alphabetically sorted for easy maintenance.
 */
export const allowedControlRecords = [
  '$ABBREVIATED',
  '$AES',
  '$AESINITIAL',
  '$ANNEAL',
  '$BIND',
  '$CHAIN',
  '$CONTR',
  '$COVARIANCE',
  '$COVR',
  '$DATA',
  '$DEFAULT',
  '$DES',
  '$DESIGN',
  '$ERROR',
  '$ESTIMATION',
  '$ESTIMATE',
  '$ESTM',
  '$ETAS',
  '$PHIS',
  '$FORMAT',
  '$INDEX',
  '$INDXS',
  '$INFN',
  '$INPUT',
  '$LEVEL',
  '$MIX',
  '$MODEL',
  '$MSFI',
  '$NONPARAMETRIC',
  '$OLKJDF',
  '$OMEGA',
  '$OMEGAP',
  '$OMEGAPD',
  '$OMIT',
  '$OVARF',
  '$PK',
  '$PRED',
  '$PRIOR',
  '$PROBLEM',
  '$RCOV',
  '$RCOVI',
  '$SCATTERPLOT',
  '$SIGMA',
  '$SIGMAP',
  '$SIGMAPD',
  '$SIMULATION',
  '$SIMULATE',
  '$SIML',
  '$SIZES',
  '$SLKJDF',
  '$SUBROUTINES',
  '$SUPER',
  '$SVARF',
  '$TABLE',
  '$THETA',
  '$THI',
  '$THETAI',
  '$THETAP',
  '$THETAPV',
  '$THETAR',
  '$THR',
  '$TOL',
  '$TTDF',
  '$WARNINGS'
];

/**
 * NMTRAN Reserved Variables
 * 
 * Special variables with predefined meanings in NMTRAN abbreviated code.
 */
export const reservedVariables = [
  'ICALL',    // Execution context indicator
  'NEWIND',   // Individual record indicator  
  'Y',        // Mandatory left-hand quantity for PRED
  'ERR',      // Alternative to ETA/EPS arrays
  'BAYES_EXTRA_REQUEST', // Bayes extra request indicator (NONMEM 7.6.0+)
  'BAYES_EXTRA',         // Bayes extra information (NONMEM 7.6.0+)
  'ITER_REPORT'          // Iteration reporting indicator (NONMEM 7.6.0+)
];

/**
 * NMTRAN Reserved Functions and Vectors (NONMEM 7.4+)
 * 
 * Reserved function names FUNCA through FUNCZ and vector names VECTRA through VECTRZ.
 */
export const reservedFunctions = [
  // Reserved functions A-Z
  ...Array.from({length: 26}, (_, i) => `FUNC${String.fromCharCode(65 + i)}`),
  // Reserved vectors A-Z  
  ...Array.from({length: 26}, (_, i) => `VECTR${String.fromCharCode(65 + i)}`)
];

/**
 * NMTRAN Protective Functions (NONMEM 7.4+)
 * 
 * Functions that protect against domain violations and floating point errors.
 */
export const protectiveFunctions = [
  'PLOG', 'PEXP', 'PSQRT', 'PSIN', 'PCOS', 'PTAN'
];

/**
 * NMTRAN Generated Files
 * 
 * Files automatically generated by NMTRAN during translation process.
 */
export const generatedFiles = [
  'FDATA', 'FCON', 'FSTREAM', 'FREPORT', 'FLIB', 'LINK'
];

/**
 * FORTRAN Format Codes (NONMEM v7.6.0+)
 * 
 * Format specifiers used in $DATA record format specifications for numeric data formatting.
 * 
 * @example
 * // Format specification: (3(F3.1,2X),E6.2)
 * // Reads: 3 groups of [fixed-point number width 3 with 1 decimal, 2 spaces], then scientific notation width 6 with 2 decimals
 * 
 * Format codes:
 * - E: Scientific notation (exponential) - e.g., E13.4 = field width 13, 4 decimal places
 * - F: Fixed-point decimal notation - e.g., F8.3 = field width 8, 3 decimal places  
 * - X: Horizontal spacing/skip - e.g., 2X = skip 2 character positions
 * - D: Double precision exponential - similar to E but for double precision
 * - G: General format (chooses E or F based on magnitude) - e.g., G12.4
 * - I: Integer format - e.g., I4 = integer field width 4
 */
export const formatCodes = [
  'E', 'F', 'X', 'D', 'G', 'I'
];
